name: release

on:
  push:
    tags:
      - v[0-9]+.*
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system:
          - image: luyikk/rust1804
            os: ubuntu1804
            bin: game_251
          - image: luyikk/rust_ubuntu
            os: ubuntu2204
            bin: game_251
    steps:
      - name: Get version from tag using github-script
        id: get_version
        uses: actions/github-script@v3
        with:
          script: |
            const tag = process.env.GITHUB_REF.split('/').pop();
            core.setOutput('version', tag.replace('v', ''));

      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build Rust project in Docker
        run: |
            docker run --rm -v "$(pwd)":/workspace -w /workspace ${{ matrix.system.image }} /bin/bash -c "git config --global --add safe.directory /workspace && git rev-parse --is-inside-work-tree /workspace && cargo build --release"
      - name: Package binary
        run: |
          mkdir -p release
          cp target/release/${{ matrix.system.bin }} release/
          tar -czvf release/${{ matrix.system.bin }}-${{ matrix.system.os }}-${{ steps.get_version.outputs.version }}.tar.gz -C release ${{ matrix.system.bin }}

      - name: Upload Binary to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/${{ matrix.system.bin }}-${{ matrix.system.os }}-${{ steps.get_version.outputs.version }}.tar.gz
